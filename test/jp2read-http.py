#!/usr/bin/python
import os, io
import subprocess
import unittest
import datetime
import json
from PIL import Image
import binascii
import cStringIO as StringIO

PIXMAP =[
 (207, 200, 194), (206, 196, 189), (205, 195, 188), (204, 197, 189), (205, 195, 188), (205, 195, 188), (204, 197, 191), (204, 197, 189), (204, 197, 189), (205, 195, 188), (204, 197, 189), (204, 197, 189), (205, 195, 188), (205, 195, 188), (204, 197, 189), (205, 195, 188), (203, 196, 188), (204, 197, 191), (204, 197, 191), (203, 196, 188), (204, 197, 191), (204, 197, 189), (203, 196, 188), (203, 196, 188), (204, 194, 187), (206, 196, 189), (205, 198, 192), (205, 198, 192), (206, 196, 189), (205, 194, 186), (205, 193, 181), (204, 194, 183),
 (241, 230, 221), (236, 227, 218), (233, 224, 215), (235, 226, 217), (236, 227, 218), (236, 227, 218), (236, 227, 218), (234, 225, 216), (233, 224, 215), (233, 224, 215), (232, 223, 214), (230, 221, 212), (229, 220, 211), (229, 220, 211), (231, 222, 213), (230, 221, 214), (232, 223, 214), (230, 221, 214), (230, 221, 212), (230, 221, 214), (230, 221, 214), (231, 222, 215), (233, 224, 216), (233, 224, 216), (233, 224, 215), (234, 225, 216), (233, 224, 216), (233, 224, 215), (234, 224, 213), (233, 223, 212), (235, 225, 212), (236, 226, 215),
 (240, 232, 222), (192, 183, 174), (170, 161, 152), (173, 165, 154), (180, 170, 159), (182, 173, 162), (185, 175, 164), (189, 178, 168), (187, 177, 164), (189, 178, 168), (189, 180, 169), (180, 172, 160), (185, 176, 165), (183, 174, 163), (189, 180, 169), (188, 179, 169), (187, 178, 169), (176, 168, 156), (175, 168, 158), (181, 174, 164), (186, 177, 166), (186, 177, 168), (182, 175, 165), (190, 182, 172), (190, 181, 171), (190, 182, 172), (186, 179, 171), (179, 172, 164), (187, 178, 169), (185, 176, 167), (185, 176, 165), (184, 174, 163),
 (239, 230, 220), (208, 200, 190), (190, 179, 169), (192, 181, 171), (186, 176, 165), (190, 179, 169), (188, 177, 167), (193, 185, 173), (192, 184, 173), (200, 191, 180), (196, 188, 176), (194, 186, 174), (199, 190, 179), (193, 185, 173), (194, 186, 174), (196, 187, 178), (195, 187, 175), (187, 180, 170), (185, 178, 169), (194, 185, 176), (195, 187, 175), (189, 180, 169), (185, 178, 169), (188, 179, 169), (193, 185, 173), (195, 186, 177), (188, 181, 173), (192, 185, 175), (187, 180, 172), (189, 180, 169), (190, 182, 171), (186, 177, 168),
 (239, 230, 220), (207, 199, 189), (190, 182, 172), (185, 176, 165), (188, 179, 168), (179, 171, 159), (187, 178, 167), (195, 187, 175), (191, 183, 172), (198, 189, 178), (196, 188, 176), (192, 184, 173), (194, 187, 177), (197, 189, 177), (201, 192, 181), (196, 189, 179), (198, 189, 180), (191, 184, 174), (187, 178, 167), (195, 187, 175), (190, 182, 171), (187, 180, 170), (193, 184, 175), (192, 183, 174), (196, 188, 176), (190, 182, 172), (188, 181, 171), (193, 184, 175), (189, 182, 172), (191, 183, 172), (190, 181, 170), (186, 177, 166),
 (238, 229, 219), (212, 203, 194), (195, 186, 177), (189, 180, 170), (174, 166, 156), (131, 126, 116), (125, 120, 109), (133, 128, 117), (135, 130, 119), (152, 146, 134), (142, 137, 126), (143, 138, 130), (153, 149, 140), (147, 144, 134), (134, 129, 119), (134, 129, 119), (134, 129, 119), (123, 120, 111), (129, 124, 116), (129, 126, 116), (128, 125, 116), (122, 119, 110), (129, 126, 116), (139, 134, 125), (129, 124, 116), (139, 134, 125), (133, 129, 122), (131, 127, 120), (136, 133, 126), (127, 122, 114), (132, 127, 118), (134, 129, 120),
 (236, 227, 218), (220, 210, 199), (197, 186, 174), (197, 187, 176), (174, 166, 155), (154, 147, 137), (133, 127, 119), (120, 117, 108), (121, 118, 109), (117, 113, 104), (129, 126, 116), (136, 133, 124), (131, 128, 120), (137, 134, 125), (129, 126, 116), (131, 126, 116), (126, 121, 110), (122, 117, 106), (130, 125, 115), (122, 117, 106), (132, 127, 116), (123, 120, 111), (117, 113, 104), (126, 120, 112), (122, 117, 108), (125, 119, 111), (126, 123, 114), (117, 113, 106), (118, 114, 107), (119, 115, 108), (116, 111, 102), (126, 121, 110),
 (240, 230, 223), (219, 210, 199), (196, 188, 176), (192, 184, 173), (179, 172, 162), (137, 132, 121), (159, 152, 140), (224, 217, 207), (218, 212, 200), (221, 214, 204), (222, 213, 202), (223, 215, 204), (222, 213, 203), (222, 213, 202), (222, 213, 203), (221, 212, 203), (220, 211, 200), (216, 209, 199), (218, 209, 198), (217, 208, 197), (218, 212, 202), (218, 212, 202), (217, 211, 201), (218, 212, 202), (216, 208, 200), (217, 211, 201), (215, 207, 199), (215, 207, 199), (215, 207, 199), (215, 207, 199), (216, 208, 200), (215, 207, 199),
 (243, 235, 229), (223, 216, 208), (199, 189, 178), (192, 184, 173), (185, 176, 165), (138, 132, 120), (166, 160, 148), (241, 234, 224), (232, 223, 214), (237, 227, 216), (237, 227, 216), (237, 228, 217), (236, 227, 218), (237, 228, 217), (238, 229, 218), (237, 228, 217), (234, 225, 216), (234, 225, 216), (234, 225, 216), (234, 225, 214), (234, 225, 214), (234, 225, 214), (233, 225, 217), (234, 225, 216), (235, 226, 218), (233, 224, 216), (229, 222, 214), (232, 224, 216), (233, 225, 217), (233, 225, 217), (229, 220, 211), (231, 222, 213),
 (243, 237, 230), (229, 222, 214), (197, 189, 177), (199, 190, 179), (186, 177, 166), (139, 134, 123), (168, 162, 152), (246, 237, 228), (240, 233, 223), (242, 234, 223), (244, 233, 221), (243, 233, 220), (243, 232, 222), (232, 223, 212), (205, 196, 185), (207, 200, 190), (206, 197, 187), (199, 191, 177), (205, 196, 185), (195, 187, 175), (199, 190, 179), (212, 204, 191), (223, 214, 203), (205, 196, 186), (202, 193, 184), (217, 208, 199), (216, 207, 198), (207, 200, 192), (205, 198, 190), (196, 189, 181), (221, 214, 204), (233, 224, 215),
 (243, 238, 231), (229, 222, 214), (203, 194, 183), (205, 196, 185), (185, 176, 165), (146, 143, 133), (170, 163, 153), (247, 238, 229), (242, 235, 223), (244, 236, 224), (244, 236, 224), (245, 234, 222), (242, 232, 219), (230, 219, 208), (194, 186, 174), (189, 180, 170), (179, 170, 161), (179, 171, 159), (198, 189, 178), (175, 167, 156), (180, 172, 160), (190, 182, 169), (211, 203, 191), (178, 169, 160), (161, 154, 146), (182, 173, 164), (173, 165, 155), (209, 200, 191), (183, 176, 168), (170, 163, 155), (200, 191, 180), (232, 222, 211),
 (243, 238, 231), (227, 220, 212), (194, 186, 174), (198, 189, 178), (176, 171, 163), (146, 141, 132), (178, 171, 159), (247, 238, 229), (240, 232, 221), (243, 235, 223), (246, 236, 225), (246, 235, 223), (243, 232, 222), (242, 230, 220), (241, 229, 215), (239, 230, 219), (242, 232, 219), (239, 227, 214), (236, 226, 213), (237, 227, 213), (239, 230, 217), (239, 229, 216), (238, 227, 217), (238, 229, 219), (237, 228, 219), (238, 229, 219), (234, 224, 211), (233, 224, 213), (232, 224, 216), (238, 229, 219), (233, 223, 212), (232, 223, 212),
 (243, 238, 231), (228, 221, 213), (194, 186, 174), (192, 183, 174), (177, 170, 162), (132, 127, 116), (167, 161, 151), (243, 234, 225), (240, 231, 220), (242, 234, 223), (243, 235, 222), (243, 233, 220), (245, 234, 222), (241, 229, 217), (243, 231, 217), (239, 227, 214), (235, 225, 212), (237, 225, 211), (235, 225, 212), (237, 227, 214), (237, 227, 214), (243, 233, 220), (239, 229, 216), (235, 226, 217), (236, 227, 218), (234, 225, 214), (235, 225, 214), (235, 226, 215), (234, 225, 216), (235, 226, 217), (234, 224, 211), (235, 225, 214),
 (244, 239, 232), (224, 217, 209), (193, 185, 173), (201, 192, 181), (187, 180, 170), (131, 126, 116), (167, 161, 151), (242, 234, 223), (240, 229, 219), (241, 233, 220), (243, 235, 223), (236, 228, 214), (196, 188, 175), (215, 205, 193), (204, 194, 181), (220, 208, 194), (240, 230, 217), (235, 225, 211), (232, 220, 206), (199, 189, 177), (225, 215, 202), (200, 191, 180), (232, 222, 210), (217, 208, 197), (200, 191, 180), (218, 209, 198), (190, 182, 171), (210, 201, 192), (189, 182, 172), (226, 217, 208), (233, 223, 210), (235, 225, 214),
 (243, 238, 231), (224, 217, 209), (185, 176, 165), (196, 189, 179), (188, 181, 171), (141, 136, 125), (164, 157, 145), (242, 233, 224), (240, 231, 220), (242, 234, 223), (242, 232, 219), (230, 219, 207), (165, 158, 148), (152, 145, 136), (183, 175, 161), (228, 217, 205), (239, 229, 216), (236, 224, 210), (206, 197, 184), (175, 167, 156), (178, 170, 158), (163, 156, 146), (230, 221, 206), (146, 139, 129), (186, 177, 168), (166, 160, 150), (140, 133, 125), (166, 158, 150), (149, 141, 133), (219, 212, 203), (236, 224, 210), (234, 224, 211),
 (243, 238, 231), (224, 217, 209), (189, 180, 169), (191, 183, 172), (187, 178, 167), (129, 124, 114), (154, 147, 137), (245, 238, 228), (240, 232, 219), (242, 234, 221), (241, 231, 216), (236, 224, 208), (214, 205, 190), (236, 224, 210), (216, 208, 194), (236, 226, 213), (240, 231, 218), (237, 227, 213), (237, 227, 213), (213, 204, 189), (215, 205, 193), (216, 206, 194), (217, 207, 194), (229, 218, 206), (206, 197, 186), (225, 217, 206), (211, 203, 191), (213, 204, 195), (213, 204, 195), (220, 211, 202), (237, 227, 216), (236, 226, 215),
 (243, 237, 230), (226, 219, 211), (185, 176, 165), (192, 184, 173), (182, 173, 162), (136, 131, 120), (153, 146, 136), (244, 235, 226), (240, 230, 217), (242, 231, 221), (240, 228, 214), (242, 232, 217), (239, 229, 216), (235, 223, 209), (233, 223, 209), (238, 229, 218), (237, 228, 217), (236, 226, 212), (237, 226, 210), (235, 223, 209), (236, 224, 210), (234, 224, 211), (234, 224, 211), (232, 222, 210), (234, 224, 211), (233, 223, 212), (233, 224, 213), (234, 225, 216), (233, 224, 215), (235, 226, 217), (234, 225, 214), (235, 225, 214),
 (243, 238, 231), (223, 216, 208), (187, 178, 167), (192, 184, 173), (181, 172, 161), (143, 136, 126), (159, 152, 142), (246, 236, 221), (239, 230, 219), (239, 229, 216), (242, 232, 217), (211, 200, 188), (219, 211, 197), (239, 229, 216), (222, 212, 199), (228, 220, 207), (206, 198, 187), (239, 229, 216), (233, 223, 209), (235, 223, 207), (232, 221, 203), (233, 223, 210), (231, 221, 209), (234, 224, 211), (230, 219, 208), (233, 224, 213), (231, 221, 210), (234, 225, 214), (232, 223, 214), (233, 224, 215), (231, 222, 213), (233, 224, 215),
 (243, 237, 230), (226, 219, 211), (184, 175, 164), (194, 186, 174), (182, 173, 162), (156, 149, 139), (161, 154, 142), (245, 237, 225), (238, 227, 217), (236, 226, 213), (244, 233, 223), (174, 166, 155), (176, 168, 156), (179, 171, 159), (174, 166, 155), (227, 216, 204), (181, 172, 161), (189, 180, 169), (217, 209, 195), (173, 164, 151), (173, 164, 151), (176, 168, 156), (163, 155, 143), (153, 144, 133), (166, 157, 146), (169, 162, 153), (187, 178, 167), (223, 214, 203), (231, 222, 213), (228, 221, 213), (233, 225, 217), (182, 170, 156),
 (243, 238, 231), (225, 218, 210), (188, 179, 168), (199, 189, 177), (190, 182, 169), (151, 145, 133), (175, 167, 156), (242, 234, 221), (238, 228, 215), (238, 228, 214), (240, 230, 217), (225, 215, 202), (208, 200, 189), (240, 233, 223), (231, 224, 214), (232, 223, 212), (233, 226, 216), (238, 229, 218), (219, 209, 196), (212, 201, 189), (238, 229, 218), (240, 232, 221), (235, 226, 215), (235, 226, 215), (234, 225, 214), (233, 226, 216), (231, 224, 214), (225, 216, 207), (227, 220, 212), (223, 216, 210), (132, 132, 132), (108, 114, 130),
 (243, 238, 231), (225, 218, 210), (189, 180, 169), (198, 189, 178), (187, 178, 167), (134, 127, 115), (159, 151, 140), (244, 236, 224), (237, 228, 217), (241, 231, 218), (240, 231, 220), (241, 233, 223), (242, 235, 225), (237, 230, 222), (237, 230, 220), (238, 229, 218), (234, 228, 216), (236, 227, 216), (239, 230, 217), (238, 229, 218), (235, 226, 215), (235, 226, 215), (235, 226, 217), (233, 224, 213), (234, 225, 214), (233, 224, 215), (229, 222, 212), (225, 216, 207), (223, 216, 206), (133, 132, 137), (108, 116, 131), (113, 121, 136),
 (244, 239, 232), (227, 220, 212), (194, 186, 174), (193, 185, 173), (180, 172, 159), (134, 125, 114), (154, 145, 134), (244, 235, 226), (238, 229, 218), (240, 232, 221), (238, 229, 218), (241, 233, 222), (216, 210, 200), (195, 188, 178), (220, 213, 203), (237, 230, 220), (183, 177, 167), (197, 190, 180), (226, 218, 206), (221, 211, 198), (222, 215, 205), (220, 211, 202), (219, 212, 203), (223, 216, 206), (236, 227, 216), (234, 228, 218), (229, 222, 212), (220, 213, 205), (138, 137, 142), (109, 115, 131), (117, 118, 115), (165, 151, 117),
 (243, 238, 231), (229, 222, 214), (193, 185, 173), (188, 178, 165), (182, 173, 162), (137, 128, 117), (155, 149, 137), (245, 237, 225), (236, 229, 221), (239, 232, 222), (241, 234, 224), (244, 237, 227), (192, 185, 177), (189, 182, 172), (186, 179, 169), (208, 201, 191), (192, 185, 175), (193, 186, 176), (182, 175, 165), (167, 161, 151), (170, 163, 153), (167, 161, 151), (178, 171, 161), (173, 166, 156), (230, 222, 210), (231, 222, 213), (225, 217, 206), (150, 145, 136), (126, 132, 150), (120, 126, 142), (124, 119, 107), (142, 135, 123),
 (245, 237, 231), (228, 221, 213), (186, 177, 166), (187, 178, 167), (182, 173, 162), (136, 129, 119), (155, 148, 138), (250, 244, 232), (236, 229, 219), (243, 236, 224), (246, 239, 231), (242, 235, 225), (243, 236, 226), (243, 236, 226), (243, 236, 226), (242, 237, 226), (243, 236, 226), (243, 236, 226), (244, 237, 225), (240, 231, 220), (243, 236, 226), (243, 237, 229), (242, 236, 228), (240, 233, 225), (231, 222, 211), (232, 224, 216), (167, 155, 132), (127, 124, 113), (127, 124, 113), (123, 120, 109), (128, 118, 92), (158, 139, 99),
 (243, 238, 231), (229, 222, 214), (194, 183, 173), (192, 183, 174), (189, 180, 170), (136, 129, 119), (157, 150, 140), (247, 238, 229), (240, 231, 221), (242, 235, 225), (246, 239, 231), (241, 235, 227), (238, 231, 221), (236, 229, 219), (238, 231, 221), (238, 231, 221), (240, 233, 223), (241, 234, 224), (240, 234, 222), (238, 227, 217), (240, 232, 222), (238, 232, 226), (237, 232, 223), (232, 225, 215), (231, 223, 216), (174, 171, 163), (131, 121, 95), (128, 121, 100), (162, 148, 114), (161, 148, 117), (138, 127, 105), (122, 123, 114),
 (243, 236, 228), (231, 224, 214), (194, 185, 176), (200, 191, 182), (192, 183, 174), (150, 142, 134), (150, 144, 134), (248, 241, 231), (239, 232, 224), (244, 237, 229), (243, 237, 230), (243, 237, 230), (243, 234, 225), (239, 232, 222), (239, 232, 222), (240, 231, 220), (241, 234, 224), (241, 233, 222), (243, 235, 223), (242, 234, 223), (241, 233, 223), (240, 233, 223), (234, 228, 218), (229, 222, 212), (210, 199, 187), (164, 151, 120), (165, 154, 126), (141, 134, 123), (125, 126, 132), (125, 122, 120), (117, 117, 120), (127, 134, 142),
 (242, 235, 225), (232, 227, 218), (196, 189, 181), (200, 193, 183), (192, 185, 177), (135, 129, 123), (162, 155, 147), (244, 237, 229), (238, 231, 221), (243, 236, 226), (243, 237, 229), (243, 238, 231), (244, 237, 227), (243, 236, 226), (241, 233, 222), (240, 234, 222), (238, 233, 224), (237, 230, 220), (239, 230, 219), (240, 231, 220), (239, 230, 219), (237, 231, 219), (232, 223, 212), (223, 214, 204), (146, 142, 138), (131, 134, 142), (121, 126, 137), (119, 130, 152), (117, 119, 123), (116, 123, 129), (114, 128, 142), (132, 134, 123),
 (244, 236, 224), (235, 228, 219), (200, 194, 184), (203, 194, 185), (192, 185, 177), (140, 134, 128), (156, 149, 141), (245, 238, 228), (238, 231, 221), (244, 236, 224), (244, 237, 227), (244, 237, 227), (244, 236, 224), (243, 236, 226), (241, 234, 226), (242, 235, 225), (242, 235, 225), (239, 232, 222), (240, 231, 220), (239, 230, 219), (239, 229, 216), (238, 229, 218), (233, 224, 213), (197, 189, 182), (141, 140, 145), (136, 137, 134), (124, 133, 150), (125, 132, 151), (122, 117, 99), (101, 115, 128), (115, 123, 133), (128, 121, 100),
 (244, 235, 226), (234, 228, 218), (201, 192, 183), (202, 195, 187), (193, 186, 178), (126, 121, 113), (143, 137, 130), (246, 239, 229), (239, 230, 219), (241, 234, 224), (243, 236, 226), (244, 237, 227), (245, 236, 227), (243, 236, 226), (239, 232, 222), (241, 234, 224), (240, 233, 223), (241, 234, 224), (240, 232, 222), (238, 229, 218), (238, 228, 215), (236, 229, 219), (230, 221, 206), (174, 161, 138), (155, 146, 127), (130, 126, 111), (114, 127, 150), (117, 122, 134), (116, 105, 76), (139, 128, 104), (156, 144, 119), (153, 140, 119),
 (242, 235, 225), (233, 227, 217), (200, 193, 185), (202, 195, 187), (195, 188, 180), (121, 115, 109), (148, 143, 134), (244, 237, 229), (237, 230, 220), (240, 232, 222), (242, 235, 225), (243, 236, 226), (243, 236, 226), (241, 234, 224), (241, 233, 223), (238, 231, 223), (240, 233, 225), (243, 236, 228), (241, 233, 223), (240, 231, 220), (236, 226, 213), (237, 228, 219), (195, 187, 174), (132, 132, 135), (141, 141, 141), (135, 127, 112), (146, 138, 123), (145, 133, 110), (143, 131, 105), (156, 145, 126), (152, 137, 109), (157, 142, 114),
 (240, 232, 222), (232, 225, 215), (201, 195, 185), (202, 195, 187), (195, 190, 183), (124, 118, 112), (143, 138, 130), (245, 238, 228), (238, 229, 218), (242, 235, 225), (243, 234, 225), (241, 233, 223), (242, 234, 223), (241, 233, 222), (240, 233, 223), (241, 234, 224), (240, 234, 226), (241, 235, 228), (238, 233, 224), (238, 231, 221), (236, 227, 218), (235, 228, 220), (147, 149, 157), (160, 152, 137), (162, 147, 117), (159, 145, 119), (150, 137, 109), (137, 117, 81), (134, 113, 74), (147, 131, 98), (153, 140, 111), (154, 138, 111),
 (239, 230, 219), (233, 224, 215), (199, 190, 181), (198, 190, 182), (193, 186, 178), (121, 116, 107), (151, 146, 137), (240, 233, 223), (239, 230, 219), (242, 234, 223), (241, 233, 222), (240, 232, 221), (240, 231, 220), (241, 230, 220), (240, 233, 223), (239, 232, 222), (240, 233, 225), (240, 233, 225), (238, 231, 221), (234, 228, 218), (232, 225, 215), (216, 208, 194), (158, 143, 114), (159, 144, 116), (168, 149, 117), (151, 128, 88), (140, 118, 76), (131, 107, 64), (144, 118, 83), (149, 133, 107), (134, 83, 54), (149, 125, 94)
]


class Jp2ReadHTTPTest(unittest.TestCase):
	def __init__(self, name, query_string, content_type="image/png", header_bytes=130):
		unittest.TestCase.__init__(self, name)
		os.putenv("QUERY_STRING", query_string)
		os.putenv("JP2_SUPPRESS_ERRORS", "1")
		self.results = subprocess.Popen("../jp2.cgi", stdout=subprocess.PIPE).communicate()[0]
		self.content_type = content_type
		self.headers = self.results[:header_bytes].decode('utf-8').split('\n')

	def getPixel(self, x, y, pixels=PIXMAP, w=32):
		return pixels[y * w + x]

	def runHTTPHeaderTest(self):
		self.assertEqual(self.headers[0], 'Content-type: ' + self.content_type)
		self.assertEqual(self.headers[1], 'Pragma: public')
		self.assertEqual(self.headers[2], 'Cache-Control: max-age=360000')
		header = self.headers[3][:13]
		timestamp = self.headers[3][15:40]
		self.assertEqual(header, 'Last-Modified')
		tm = datetime.datetime.strptime(timestamp, "%a, %d %b %Y %H:%M:%S")
		today = datetime.date.today()
		self.assertEqual(today.day, tm.day, "Last modified header day should match today")
		self.assertEqual(today.month, tm.month, "Last modified header month should match this month")
		self.assertEqual(today.year, tm.year, "Last modified header year should match this year")
		self.assertEqual(self.headers[4], 'Status: 200 OK')

	def runJP2HeaderTest(self, jp2h=False):
		if(jp2h == False):
			jp2h = json.loads(self.results[138:].decode('utf-8'))
		self.assertEqual(jp2h['tw'], 3, "balloon.jp2 has 3x4 tiles (tw=3)")
		self.assertEqual(jp2h['th'], 4, "balloon.jp2 has 3x4 tiles (th=4)")
		self.assertEqual(jp2h['num_comps'], 3, "balloon.jp2 has 3 compositions (num_comps=3)")
		self.assertEqual(jp2h['tdx'], 1024, "balloon.jp2 has tiles of 1024x1024 pixels (tdx=1024)")
		self.assertEqual(jp2h['tdy'], 1024, "balloon.jp2 has tiles of 1024x1024 pixels (tdy=1024)")
		self.assertEqual(jp2h['x1'], 2717, "balloon.jp2 is 2717x3701 pixels in size (y1=2717)")
		self.assertEqual(jp2h['y1'], 3701, "balloon.jp2 is 2717x3701 pixels in size (x1=3701)")
		self.assertEqual(jp2h['num_res'], 6, "balloon.jp2 has 6 resolution levels (num_res=6)")

	def runJP2HeaderTestJSONP(self):
		jp2h = json.loads(self.results[154:len(self.results)-3].decode('utf-8'))
		self.runJP2HeaderTest(jp2h)
		self.assertEqual(self.results[139:154], "jsonp_callback(")
		self.assertEqual(self.results[len(self.results)-3:], ");\n")

	def runPNGTest(self):
		bytes = self.results[131:]
		png = Image.open(io.BytesIO(bytes))
		width, height = png.size
		pixels = list(png.getdata())
		self.assertEqual(width, 32)
		self.assertEqual(height, 32)
		self.assertEqual(pixels, PIXMAP)
		del png

	def runPNGCropTest(self):
		bytes = self.results[131:]
		png = Image.open(io.BytesIO(bytes))
		w, h = png.size
		pixels = list(png.getdata())
		self.assertEqual(w, 2)
		self.assertEqual(h, 1)
		self.assertEqual(pixels, [self.getPixel(10,10), self.getPixel(11, 10)])
		del png

	def runPNGoutOfBoundsTest(self):
		bytes = self.results[131:]
		png = Image.open(io.BytesIO(bytes))
		w, h = png.size
		pixels = list(png.getdata())
		self.assertEqual(w, 1)
		self.assertEqual(h, 1)
		self.assertEqual(pixels, [self.getPixel(31, 31)])
		del png

	def runPNGoutOfBoundsTest2(self):
		bytes = self.results[131:]
		png = Image.open(io.BytesIO(bytes))
		w, h = png.size
		pixels = list(png.getdata())
		self.assertEqual(w, 2)
		self.assertEqual(h, 2)
		self.assertEqual(pixels, [self.getPixel(0, 0), self.getPixel(1, 0),self.getPixel(0, 1), self.getPixel(1, 1)])
		del png

	def runPNGLastTileDimensionsTest(self):
		bytes = self.results[131:]
		png = Image.open(io.BytesIO(bytes))
		w, h = png.size
		pixels = list(png.getdata())
		self.assertEqual(w, 84)
		self.assertEqual(h, 79)
		del png

	def runPNGCropTest2(self):
		bytes = self.results[131:]
		png = Image.open(io.BytesIO(bytes))
		w, h = png.size
		pixels = list(png.getdata())
		self.assertEqual(w, 22)
		self.assertEqual(h, 22)
		self.assertEqual(self.getPixel(31,31), self.getPixel(21,21, pixels=pixels,w=w))
		del png


	def runReductionOutOfBoundsTest(self):
		message = json.loads(self.results[66:].decode('utf-8'))
		self.assertEqual(self.headers[0], 'Content-type: ' + self.content_type)
		self.assertEqual(self.headers[1], 'Status: 500 Internal Server Error')
		self.assertEqual(message['error'], "Cannot read resource: '../balloon.jp2'")

	def runTileOutOfBoundsTest(self):
		message = json.loads(self.results[66:].decode('utf-8'))
		self.assertEqual(self.headers[0], 'Content-type: ' + self.content_type)
		self.assertEqual(self.headers[1], 'Status: 500 Internal Server Error')
		self.assertEqual(message['error'], "Cannot read resource: '../balloon.jp2'")


if __name__ == '__main__':
	runner = unittest.TextTestRunner(verbosity=2)
	test_suite = unittest.TestSuite()
	test_suite.addTest(Jp2ReadHTTPTest("runHTTPHeaderTest", query_string="f=../balloon.jp2", content_type="application/json", header_bytes=137))
	test_suite.addTest(Jp2ReadHTTPTest("runJP2HeaderTest", query_string="f=../balloon.jp2", content_type="application/json", header_bytes=137))
	test_suite.addTest(Jp2ReadHTTPTest("runJP2HeaderTestJSONP", query_string="f=../balloon.jp2&callback=jsonp_callback", content_type="application/json", header_bytes=137))

	test_suite.addTest(Jp2ReadHTTPTest("runReductionOutOfBoundsTest", query_string="f=../balloon.jp2&t=0&r=6", content_type="application/json", header_bytes=66))
	test_suite.addTest(Jp2ReadHTTPTest("runTileOutOfBoundsTest", query_string="f=../balloon.jp2&t=12", content_type="application/json", header_bytes=66))

	test_suite.addTest(Jp2ReadHTTPTest("runHTTPHeaderTest", query_string="f=../balloon.jp2&t=0&r=5"))
	test_suite.addTest(Jp2ReadHTTPTest("runPNGTest", query_string="f=../balloon.jp2&t=0&r=5"))
	test_suite.addTest(Jp2ReadHTTPTest("runPNGLastTileDimensionsTest", query_string="f=../balloon.jp2&t=11&r=3"))
	test_suite.addTest(Jp2ReadHTTPTest("runPNGCropTest", query_string="f=../balloon.jp2&t=0&r=5&x=10&y=10&w=2&h=1"))
	test_suite.addTest(Jp2ReadHTTPTest("runPNGoutOfBoundsTest", query_string="f=../balloon.jp2&t=0&r=5&x=31&y=31&w=2&h=2"))
	test_suite.addTest(Jp2ReadHTTPTest("runPNGoutOfBoundsTest2", query_string="f=../balloon.jp2&t=0&r=5&x=-1&y=-1&w=2&h=2"))
	test_suite.addTest(Jp2ReadHTTPTest("runPNGCropTest2", query_string="f=../balloon.jp2&t=0&r=5&x=10&y=10"))

	runner.run (test_suite)
